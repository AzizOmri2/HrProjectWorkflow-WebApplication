class SessionsController < Devise::SessionsController
  respond_to :json

  def create
    user = User.find_by(email: params[:user][:email])

    unless user
      return render json: {
        message: 'Sign in failed.',
        errors: ['Email not found']
      }, status: :unauthorized
    end

    unless user.active?
      return render json: {
        message: 'Your account has been banned. Please contact administration.',
        errors: ['Account is inactive']
      }, status: :forbidden
    end

    # Devise will handle authentication
    self.resource = warden.authenticate!(auth_options)
    sign_in(resource_name, resource)

    token = request.env['warden-jwt_auth.token'] # JWT generated by devise-jwt

    render json: {
      message: 'Signed in successfully.',
      user: {
        id: resource.id,
        name: resource.name,
        email: resource.email,
        role: resource.role,
        image: resource.image,
        created_at: resource.created_at,
        updated_at: resource.updated_at
      },
      token: token
    }, status: :ok
  end

  # Important: If using JWT revocation, handle token invalidation here
  def destroy
    # Optional: If using `:null` revocation strategy, no action needed
    # Optional: If using `JTIMatcher`, regenerate jti for revocation
    if current_user
      current_user.update(jti: SecureRandom.uuid)
    end

    render json: { message: 'Signed out successfully.' }, status: :ok
  end

  def respond_to_on_destroy
    render json: { message: 'Signed out successfully.' }, status: :ok
  end
end