# PostgreSQL. Versions 9.3 and up are supported.
#
# Install the pg driver:
#   gem install pg
# On macOS with Homebrew:
#   gem install pg -- --with-pg-config=/usr/local/bin/pg_config
# On Windows:
#   gem install pg
#       Choose the win32 build.
#       Install PostgreSQL and put its /bin directory on your path.
#
# Configure Using Gemfile
# gem "pg"
#
default: &default
  adapter: postgresql
  encoding: unicode
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  # Hostname of the database server (in Docker, this should match the service name in docker-compose.yml)
  host: <%= ENV["DATABASE_HOST"] || "localhost" %>
  port: 5432
  # Database username (using 'postgres' as per Docker POSTGRES_USER)
  username: <%= ENV["DATABASE_USER"] || "postgres" %>
  # Database password (provided via environment variable in docker-compose.yml)
  password: <%= ENV["DATABASE_PASSWORD"] || "root" %>
  # Name of the database to connect to
  database: <%= ENV["DATABASE_NAME"] || "backend_development" %>

development:
  <<: *default
  database: backend_development
  # The specified database role being used to connect to PostgreSQL.
  # When left blank, PostgreSQL will use the default role.
  #username: backend

  # The password associated with the PostgreSQL role (username).
  #password:

  # Connect on a TCP socket. Omitted by default since the client uses a
  # domain socket that doesn't need configuration.
  #host: localhost

  # The TCP port the server listens on. Defaults to 5432.
  #port: 5432

  # Schema search path. The server defaults to $user,public
  #schema_search_path: myapp,sharedapp,public

  # Minimum log levels, in increasing order:
  #   debug5, debug4, debug3, debug2, debug1,
  #   log, notice, warning, error, fatal, and panic
  #min_messages: notice

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  database: backend_test

# As with config/credentials.yml, you never want to store sensitive information,
# like your database password, in your source code.
#
# Instead, provide the password or a full connection URL as an environment
# variable when you boot the app.
#
#   DATABASE_URL="postgres://myuser:mypass@localhost/somedatabase"
#
# If the connection URL is provided in the special DATABASE_URL environment
# variable, Rails will automatically merge its configuration values on top of
# the values provided in this file.
#
# Alternatively, you can specify a connection URL environment variable explicitly:
#
#   production:
#     url: <%= ENV["MY_APP_DATABASE_URL"] %>
#
# Read https://guides.rubyonrails.org/configuring.html#configuring-a-database
# for more details.
#
production:
  <<: *default
  database: <%= ENV["DATABASE_NAME"] || "backend_production" %>
  username: <%= ENV["DATABASE_USER"] || "postgres" %>
  password: <%= ENV["DATABASE_PASSWORD"] || "root" %>
